Key=function(e,t,n,r){Phaser.Sprite.call(this,e,t,n,"key");this.doorSet=r;e.add.existing(this)};Key.prototype=Object.create(Phaser.Sprite.prototype);Key.prototype.constructor=Key;var game=new Phaser.Game(320,480,Phaser.CANVAS,"game-screen");var NORTH=0;var SOUTH=1;var EAST=2;var WEST=3;var score;var player;var cursors;var map;var hearts;var text;var enemies;var emitter;var up=false;var right=false;var down=false;var left=false;var face=SOUTH;var doors;var keysArray=[];var respawnPosition=new Phaser.Point(180,60);var heartPositions=[new Phaser.Point(1*32,18.5*32),new Phaser.Point(8.5*32,18.5*32),new Phaser.Point(3*32,36*32)];var enemyPositions=[new Phaser.Point(27*32,20*32),new Phaser.Point(25*32,20*32),new Phaser.Point(4*32,13*32),new Phaser.Point(25*32,23*32),new Phaser.Point(4*32,34*34)];var emitterPosition=new Phaser.Point(1400,32);var keyPositions=[new Phaser.Point(2*32,15*32),new Phaser.Point(23*32,5*32),new Phaser.Point(1*32,25.5*32)];var doorPositions=[[new Phaser.Point(8*32,17*32),new Phaser.Point(9*32,17*32)],[new Phaser.Point(25*32,20*32),new Phaser.Point(26*32,20*32),new Phaser.Point(27*32,20*32),new Phaser.Point(3*32,18*32),new Phaser.Point(3*32,19*32)],[new Phaser.Point(40*32,14*32),new Phaser.Point(40*32,15*32),new Phaser.Point(40*32,16*32)]];var mainState={preload:function(){game.load.tilemap("map","assets/tilemaps/maps/main.json",null,Phaser.Tilemap.TILED_JSON);game.load.image("tiles","assets/tilemaps/tiles/tiles.png");game.load.image("heart","assets/sprites/heart.png");game.load.image("enemy","assets/sprites/enemy.png");game.load.image("flower","assets/sprites/flower.png");game.load.image("diamond","assets/sprites/diamond.png");game.load.image("star","assets/sprites/star_particle.png");game.load.image("key","assets/sprites/key.png");game.load.image("door","assets/sprites/door.png");game.load.spritesheet("player","assets/sprites/player.png",28,32);game.load.spritesheet("buttonvertical","assets/buttons/button-vertical.png",64,64);game.load.spritesheet("buttonhorizontal","assets/buttons/button-horizontal.png",96,64);game.scale.scaleMode=Phaser.ScaleManager.SHOW_ALL;game.scale.fullScreenScaleMode=Phaser.ScaleManager.EXACT_FIT},create:function(){if(!game.device.desktop){game.input.onDown.add(this.fullScreen,this)}score=0;game.physics.startSystem(Phaser.Physics.ARCADE);map=game.add.tilemap("map");map.addTilesetImage("tiles");layer=map.createLayer("Tile Layer 1");layer.resizeWorld();map.setCollisionBetween(1,6);player=game.add.sprite(respawnPosition.x,respawnPosition.y,"player");game.physics.enable(player);player.body.fixedRotation=true;player.body.collideWorldBounds=true;player.animations.add("walk_down",[1,2],5,true);player.animations.add("walk_up",[4,5],5,true);player.animations.add("walk_left",[7,8],5,true);player.animations.add("walk_right",[10,11],5,true);hearts=game.add.group();hearts.enableBody=true;for(var e=0;e<heartPositions.length;e++){hearts.create(heartPositions[e].x,heartPositions[e].y,"heart")}enemies=game.add.group();enemies.enableBody=true;for(var e=0;e<enemyPositions.length;e++){var t=enemies.create(enemyPositions[e].x,enemyPositions[e].y,"enemy");if(e>=2){t.body.velocity.x=200}t.body.bounce.set(1)}doors=game.add.group();doors.enableBody=true;for(var e=0;e<doorPositions.length;e++){var n=doorPositions[e];var r=[];for(var i=0;i<n.length;i++){var s=doors.create(n[i].x,n[i].y,"door");s.body.immovable=true;r.push(s)}var o=new Key(game,keyPositions[e].x,keyPositions[e].y,r);game.physics.enable(o);keysArray.push(o)}game.camera.follow(player);cursors=game.input.keyboard.createCursorKeys();var u={font:"30px Arial",fill:"#000000"};text=game.add.text(16,16,"Get the three hearts!",u);text.fixedToCamera=true;buttonup=game.add.button(128,288,"buttonvertical",null,this,0,1,0,1);buttonup.fixedToCamera=true;buttonup.events.onInputOver.add(function(){up=true});buttonup.events.onInputOut.add(function(){up=false});buttonup.events.onInputDown.add(function(){up=true});buttonup.events.onInputUp.add(function(){up=false});buttonleft=game.add.button(32,352,"buttonhorizontal",null,this,0,1,0,1);buttonleft.fixedToCamera=true;buttonleft.events.onInputOver.add(function(){left=true});buttonleft.events.onInputOut.add(function(){left=false});buttonleft.events.onInputDown.add(function(){left=true});buttonleft.events.onInputUp.add(function(){left=false});buttondown=game.add.button(128,416,"buttonvertical",null,this,0,1,0,1);buttondown.fixedToCamera=true;buttondown.events.onInputOver.add(function(){down=true});buttondown.events.onInputOut.add(function(){down=false});buttondown.events.onInputDown.add(function(){down=true});buttondown.events.onInputUp.add(function(){down=false});buttonright=game.add.button(192,352,"buttonhorizontal",null,this,0,1,0,1);buttonright.fixedToCamera=true;buttonright.events.onInputOver.add(function(){right=true});buttonright.events.onInputOut.add(function(){right=false});buttonright.events.onInputDown.add(function(){right=true});buttonright.events.onInputUp.add(function(){right=false})},update:function(){game.physics.arcade.collide(player,layer);game.physics.arcade.collide(enemies,layer);game.physics.arcade.collide(hearts,layer);game.physics.arcade.overlap(player,enemies,this.gameOver,null,this);game.physics.arcade.collide(player,doors);for(var e=0;e<keysArray.length;e++){game.physics.arcade.overlap(player,keysArray[e],this.getKey,null,this)}player.body.velocity.x=0;player.body.velocity.y=0;if(cursors.left.isDown||left){face=WEST;player.body.velocity.x=-200;player.animations.play("walk_left")}else if(cursors.right.isDown||right){face=EAST;player.body.velocity.x=200;player.animations.play("walk_right")}else if(cursors.up.isDown||up){face=NORTH;player.body.velocity.y=-200;player.animations.play("walk_up")}else if(cursors.down.isDown||down){face=SOUTH;player.body.velocity.y=200;player.animations.play("walk_down")}else{player.animations.stop();switch(face){case NORTH:player.frame=3;break;case SOUTH:player.frame=0;break;case WEST:player.frame=6;break;case EAST:player.frame=9;break}}this.checkHearts();if(score==3&&emitter==null){this.goodGame()}},checkHearts:function(){hearts.forEach(function(e){if(this.checkOverlap(player,e)){score+=1;text.text="You've got "+score+" hearts.";e.kill()}},this,true)},checkOverlap:function(e,t){var n=e.getBounds();var r=t.getBounds();return Phaser.Rectangle.intersects(n,r)},gameOver:function(e,t){e.kill();this.restart()},restart:function(){player.reset(100,100)},goodGame:function(){enemies.destroy();emitter=game.add.emitter(1400,100,200);emitter.makeParticles(["star","diamond","flower"]);emitter.gravity=200;emitter.start(false,5e3,20);text.text="Go to the EAST!"},fullScreen:function(){game.scale.startFullScreen(false)},getKey:function(e,t){t.kill();for(var n=0;n<t.doorSet.length;n++){doorSet=t.doorSet[n];doorSet.kill()}}};game.state.add("main",mainState);game.state.start("main")